{"version":3,"sources":["utils.js","components/ParaSetter/index.jsx","components/Icon/index.jsx","components/PianoRoll/index.jsx","components/ChordProgression/index.jsx","components/Generator/index.jsx","components/MainInterface/index.jsx","App.js","index.js"],"names":["myServer","myRoot","localhost5000","server","add","obj","v","method","postData","callback","axios","get","then","response","data","setState","error","message","warn","content","key","console","log","post","meter","value","ui","mode","tonic","style","Option","Select","formItemLayout","labelCol","span","wrapperCol","ParaSetter","state","chordStyleControl","textureStyleControl","values","onFinish","PubSub","publish","normFile","e","Array","isArray","fileList","name","this","initialValues","chord_style","rhythm_density","voice_number","enable_texture_style","enable_chord_style","orientation","Item","label","valuePropName","getValueFromEvent","hasFeedback","rules","required","Dragger","action","accept","maxCount","className","InboxOutlined","List","fields","remove","map","field","align","size","noStyle","shouldUpdate","prevValues","curValues","area","sights","fieldKey","placeholder","visibility","MinusCircleOutlined","onClick","type","icon","PlusOutlined","item","disabled","checked","onChange","target","max","min","step","dots","offset","marginTop","htmlType","shape","minHeight","Component","Icon","t","class","viewBox","version","xmlns","width","height","d","mm","require","PianoRoll","midiURL","id","midiWithoutMelodyURL","additionalVisualizer","setAdditionalVisualizer","noteHeight","pixelsPerTimeStep","color","backgroundColor","React","useState","noteSequence","setNoteSequence","noteSequenceWithoutMelody","setNoteSequenceWithoutMelody","player","setPlayer","visualizer","setVisualizer","useEffect","urlToNoteSequence","ns","undefined","viz","Visualizer","document","getElementById","noteSpacing","noteRGB","activeNoteRGB","vizPlayer","SoundFontPlayer","run","note","redraw","stop","getPlayState","start","display","Title","Typography","Paragraph","ChordText","index","progression","parseChord","chord","parsed","allChords","i","length","concat","allChordsPositions","last","push","ctx","getContext","font","fillText","ChordProgression","props","melodyVis","setMelodyVis","handleStyleChange","prevStyles","father","styles","otherStyles","textAlign","level","marginBottom","href","float","fontSize","marginLeft","autoFocus","bordered","onSelect","contains","midi_name","melody","progression_full","chord_WM","acc","acc_WM","bottom","position","left","tryChangeAllStyle","nextProps","prevState","arr","Meta","Card","statusText","toTop","scrollToptimer","setInterval","top","body","scrollTop","documentElement","speed","clearInterval","Generator","generatingStage","generated","generatedChordName","generatedAccName","playing","count","calcDivWidth","card","forEach","val","_","__","playMp3","mp3","Audio","Math","random","play","addEventListener","event","pause","askStage","askStageCallback","window","askStageInterval","generateQueryCallback","res","status","parseInt","stage","chord_midi_name","acc_midi_name","regenerate","refs","form","getFieldValue","newStyle","newStyles","idx","CheckCircleOutlined","marginRight","LoadingOutlined","paddingLeft","paddingRight","userSelect","download","hoverable","avatar","which","title","description","minWidth","padding","CaretRightFilled","lineHeight","CaretLeftFilled","ref","Step","Steps","stepText","des","MainInterface","onSubmit","msg","subscribe","current","maxWidth","help1","Text","code","help2","help3","strong","App","isModalVisible","setIsModalVisible","closeModal","QuestionCircleOutlined","paddingTop","visible","onOk","onCancel","footer","defaultActiveKey","centered","TabPane","tab","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e54d97ab.chunk.js","sourcesContent":["import { message } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\n// export const env = 'dev';\r\nexport const env = 'staging';\r\n// export const env = 'prod';\r\nexport const localhost3000 = 'http://localhost:3000';\r\nexport const localhost5000 = 'http://127.0.0.1:5000';\r\nexport const publicDomain = 'https://billyyi.top';\r\nexport const backendPath = '/api/chorderator_back_end';\r\nexport const frontendPath = '/accomontage2-online'\r\nexport const prodServer = publicDomain + backendPath;\r\nexport const stagingServer = localhost5000 + backendPath;\r\nexport const devServer = localhost3000 + backendPath;\r\nexport var myServer;\r\nexport var myDomain;\r\nexport var myRoot;\r\nif (env === 'prod'){\r\n    myServer = prodServer;\r\n    myDomain = publicDomain;\r\n    myRoot = publicDomain + frontendPath;\r\n}\r\nelse if(env === 'staging'){\r\n    myServer = stagingServer;\r\n    myDomain = localhost5000;\r\n    myRoot = localhost5000;\r\n}\r\nelse if (env === 'dev'){\r\n    myServer = devServer;\r\n    myDomain = localhost3000;\r\n    myRoot = localhost3000;\r\n}\r\n\r\nexport function server(add, obj, v, method='get', postData=null, callback=null) {\r\n    if (method === 'get'){\r\n        axios.get(myServer + add).then(\r\n            response => { \r\n                if (callback !== null){\r\n                    callback(response.data);\r\n                }\r\n                obj.setState({\r\n                    [v]:response.data\r\n                })\r\n            },\r\n            error => { \r\n                message.warn({content:'Sorry, something wrong happened to the server!', key:'message'})\r\n                console.log(error)\r\n            },\r\n        )\r\n    }\r\n    else{\r\n        axios.post(myServer + add, postData).then(\r\n            response => { \r\n                if (callback !== null){\r\n                    callback(response.data);\r\n                }\r\n                obj.setState({\r\n                    [v]:response.data\r\n                })\r\n            },\r\n            error => { \r\n                message.warn({content:'Sorry, something wrong happened to the server!', key:'message'})\r\n                console.log(error)\r\n            },\r\n        )\r\n    }\r\n};\r\nexport function getCookie(name){\r\n    var prefix = name + \"=\"\r\n    var start = document.cookie.indexOf(prefix)\r\n \r\n    if (start === -1) {\r\n        return null;\r\n    }\r\n \r\n    var end = document.cookie.indexOf(\";\", start + prefix.length)\r\n    if (end === -1) {\r\n        end = document.cookie.length;\r\n    }\r\n \r\n    var value = document.cookie.substring(start + prefix.length, end)\r\n    return unescape(value);\r\n}\r\nexport const meter = [\r\n    { value:'4/4', ui:'4/4' },\r\n    { value:'3/4', ui:'3/4' },\r\n]\r\nexport const mode = [\r\n    { value:'maj', ui:'Major' },\r\n    { value:'min', ui:'Minor' },\r\n]\r\nexport const tonic = [ \r\n    'C', 'C#', 'Db', 'D', 'D#', 'Eb', 'E', 'F',\r\n    'F#', 'Gb', 'G', 'G#', 'Ab', 'A', 'A#', 'Bb', 'B'\r\n]\r\nexport const progressionStyle = [\r\n    { value:'emotional', ui:'Emotional' },\r\n    { value:'pop', ui:'Pop' },\r\n    { value:'dark', ui:'Dark' },\r\n    { value:'edm', ui:'EDM' },\r\n    { value:'r&b', ui:'R&B' },\r\n]\r\nexport const chordStyle = [\r\n    { value:'standard', ui:'Standard' },\r\n    { value:'emotional', ui:'Emotional' },\r\n    { value:'classy', ui:'Classy' },\r\n    { value:'root-note', ui:'Root Note' },\r\n    { value:'cluster', ui:'Cluster' },\r\n    { value:'power-chord', ui:'Power Chord' },\r\n    { value:'power-octave', ui:'Power Octave' },\r\n    { value:'full-octave', ui:'Full Octave' },\r\n    { value:'first-inversion', ui:'First Inversion' },\r\n    { value:'second-inversion', ui:'Second Inversion' },\r\n    { value:'seventh', ui:'Seventh' },\r\n    { value:'sus2', ui:'Sus2' },\r\n    { value:'sus4', ui:'Sus4' },\r\n]\r\nexport const style = [\r\n    { value:'pop_standard', ui:'Pop Standard' },\r\n    { value:'pop_complex', ui:'Pop Complex' },\r\n    { value:'dark', ui:'Dark' },\r\n    { value:'r&b', ui:'R&B' },\r\n]\r\nexport const rhythm = [\r\n    { value:'fast', ui:'Fast' },\r\n    { value:'slow', ui:'Slow' },\r\n]\r\nexport const cycle = [\r\n    { value:'4m', ui:'Less than 4' },\r\n    { value:'4', ui:'4' },\r\n    { value:'8', ui:'8' },\r\n    { value:'12', ui:'12' },\r\n    { value:'16', ui:'16' },\r\n    { value:'16p', ui:'Greater than 16' },\r\n]\r\nexport const pattern = [\r\n    { value:'2564', ui:'ii-V-vi-IV' },\r\n    { value:'1536', ui:'I-V-iii-vi' },\r\n    { value:'4165', ui:'IV-I-vi-V' },\r\n    { value:'4265', ui:'IV-ii-vi-V' },\r\n    { value:'4561', ui:'IV-V-vi-I' },\r\n    { value:'6345', ui:'vi-III-IV-V' },\r\n]\r\nexport const position = [\r\n    { value:'verse', ui:'Verse' },\r\n    { value:'chorus', ui:'Chorus' },\r\n    { value:'intro', ui:'Intro' },\r\n    { value:'transition', ui:'Transition' },\r\n    { value:'interlude', ui:'Interlude' },\r\n    { value:'bridge', ui:'Bridge' },\r\n    { value:'outro', ui:'Outro' },\r\n    { value:null, ui:'unknown'}\r\n]","import React, { Component } from 'react'\r\nimport {\r\n    Form,\r\n    Select,\r\n    Button,\r\n    Upload,\r\n    Divider,\r\n    Space,\r\n    Slider,\r\n    Checkbox,\r\n} from 'antd';\r\nimport { InboxOutlined, PlusOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport { myServer, server, meter, tonic, style, mode } from '../../utils';\r\nimport PubSub from 'pubsub-js';\r\nconst { Option } = Select;\r\n\r\nconst formItemLayout = {\r\n    labelCol: { span: 6 },\r\n    wrapperCol: { span: 14 },\r\n};\r\n\r\nexport default class ParaSetter extends Component {\r\n\r\n    state = {\r\n        chordStyleControl: true,\r\n        textureStyleControl: true,\r\n        values: null,\r\n    }\r\n\r\n    onFinish = (values) => {\r\n        server(`/generate`, this, null, 'post', values);\r\n        PubSub.publish('submit', values);\r\n    }\r\n\r\n    normFile = (e) => {\r\n        if (Array.isArray(e)) {\r\n            return e;\r\n        }\r\n        return e && e.fileList;\r\n    };\r\n\r\n    add = () => {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form\r\n                    name=\"validate_other\"\r\n                    {...formItemLayout}\r\n                    onFinish={this.onFinish}\r\n                    initialValues={{\r\n                        tonic: 'C',\r\n                        meter: '4/4',\r\n                        mode: 'maj',\r\n                        chord_style: 'pop_standard',\r\n                        rhythm_density:2,\r\n                        voice_number:2,\r\n                        enable_texture_style:true,\r\n                        enable_chord_style:true,\r\n                    }}\r\n                >\r\n                    <Divider orientation=\"left\">Set Melody</Divider>\r\n                    <Form.Item\r\n                        label=\"Upload Melody MIDI\"\r\n                        name=\"midi\"\r\n                        valuePropName=\"fileList\"\r\n                        getValueFromEvent={this.normFile}\r\n                        hasFeedback\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please upload your melody MIDI!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Upload.Dragger name=\"midi\" action={`${myServer}/upload_melody`} accept='.mid' maxCount={1} >\r\n                            <p className=\"ant-upload-drag-icon\">\r\n                                <InboxOutlined />\r\n                            </p>\r\n                            <p className=\"ant-upload-text\">Click or drag MIDI file to this area to upload</p>\r\n                        </Upload.Dragger>\r\n                    </Form.Item>\r\n\r\n                    <Divider orientation=\"left\">Set Phrase</Divider>\r\n                    <Form.Item name=\"phrases\" label='Phrases' rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please set the phrase of the melody',\r\n                        },\r\n                    ]}>\r\n                        <Form.List name=\"phrases\">\r\n                            {(fields, { add, remove }) => (\r\n                                <>\r\n                                    {fields.map(field => (\r\n                                        <Space key={field.key} align=\"baseline\" size={120} >\r\n                                            <Form.Item\r\n                                                noStyle\r\n                                                shouldUpdate={(prevValues, curValues) =>\r\n                                                    prevValues.area !== curValues.area || prevValues.sights !== curValues.sights\r\n                                                }\r\n                                            >\r\n                                                {() => (\r\n                                                    <Form.Item\r\n                                                        {...field}\r\n                                                        label=\"Phrase Name\"\r\n                                                        name={[field.name, 'phrase_name']}\r\n                                                        fieldKey={[field.fieldKey, 'phrase_name']}\r\n                                                        rules={[{ required: true, message: 'Missing Name' }]}\r\n                                                    >\r\n                                                        <Select placeholder=\"Please select a name\">\r\n                                                            <Option key='phrase_name_option_A' value='A'>A<span style={{ visibility:'hidden'}}>____________________</span></Option>\r\n                                                            <Option key='phrase_name_option_B' value='B'>B<span style={{ visibility:'hidden'}}>____________________</span></Option>\r\n                                                            <Option key='phrase_name_option_C' value='C'>C<span style={{ visibility:'hidden'}}>____________________</span></Option>\r\n                                                            <Option key='phrase_name_option_C' value='D'>D<span style={{ visibility:'hidden'}}>____________________</span></Option>\r\n                                                        </Select>\r\n                                                    </Form.Item>\r\n                                                )}\r\n                                            </Form.Item>\r\n                                            <Form.Item\r\n                                                {...field}\r\n                                                label=\"Phrase Length\"\r\n                                                name={[field.name, 'phrase_length']}\r\n                                                fieldKey={[field.fieldKey, 'phrase_length']}\r\n                                                rules={[{ required: true, message: 'Missing length' }]}\r\n                                            >\r\n                                                <Select placeholder=\"Please select a length\">\r\n                                                    <Option key='phrase_length_option_4' value={4}>4<span style={{visibility:'hidden'}}>_____________________</span></Option>\r\n                                                    <Option key='phrase_length_option_8' value={8}>8<span style={{visibility:'hidden'}}>_____________________</span></Option>\r\n                                                </Select>\r\n                                            </Form.Item>\r\n\r\n                                            <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n                                        </Space>\r\n                                    ))}\r\n\r\n                                    <Form.Item>\r\n                                        <Button type=\"dashed\" onClick={() => add()} icon={<PlusOutlined />}>\r\n                                            Add Phrase\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </>\r\n                            )}\r\n                        </Form.List>\r\n                    </Form.Item>\r\n\r\n                    <Divider orientation=\"left\">Set Meta</Divider>\r\n\r\n                    <Form.Item name=\"tonic\" label=\"Tonic\" hasFeedback\r\n                        rules={[{ required: true, message: 'Please select a tonic!' }]}\r\n                    >\r\n                        <Select placeholder=\"Please select a tonic\">\r\n                            {tonic.map((item) => {\r\n                                return <Option key={`tonic_option_${item}`} value={item}>{item}</Option>\r\n                            })}\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"mode\" label=\"Mode\" hasFeedback\r\n                        rules={[{ required: true, message: 'Please select a mode!' }]}\r\n                    >\r\n                        <Select placeholder=\"Please select a mode\">\r\n                            {mode.map((item) => {\r\n                                return <Option key={`mode_option_${item}`} value={item.value}>{item.ui}</Option>\r\n                            })}\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"meter\" label=\"Meter\" hasFeedback\r\n                        rules={[{ required: true, message: 'Please select a meter!' }]}\r\n                    >\r\n                        <Select placeholder=\"Please select a meter\">\r\n                            {meter.map((item) => {\r\n                                return <Option key={`meter_option_${item}`} value={item.value} disabled={item.value === '3/4'?true:false}>{item.ui}</Option>\r\n                            })}\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Divider orientation=\"left\">Set Style</Divider>\r\n\r\n                    <Form.Item name=\"enable_chord_style\" label='Enable Chord Style Controlling' valuePropName=\"checked\">\r\n                        <Checkbox checked={this.state.chordStyleControl} onChange={(e) => this.setState({chordStyleControl:e.target.checked})}/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"chord_style\" label=\"Chord Style\"\r\n                        rules={[{ required: true, message: 'Please select a style!' }]}\r\n                    >\r\n                        <Select placeholder=\"Please select a style\" disabled={!this.state.chordStyleControl}>\r\n                            {style.map((item) => {\r\n                                return <Option key={`chord_style_option_${item}`} value={item.value}>{item.ui}</Option>\r\n                            })}\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"enable_texture_style\" label='Enable Texture Style Controlling' valuePropName=\"checked\">\r\n                        <Checkbox checked={this.state.textureStyleControl} onChange={(e) => this.setState({textureStyleControl:e.target.checked})} />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"rhythm_density\" label=\"Texture Rhythm Density (RD)\"\r\n                        rules={[{ required: true, message: 'Please select a RD!' }]}\r\n                    >\r\n                        <Slider max={4} min={0} step={1} dots disabled={!this.state.textureStyleControl}/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"voice_number\" label=\"Texture Voice Number (VN)\"\r\n                        rules={[{ required: true, message: 'Please select a VN!' }]}\r\n                    >\r\n                        <Slider max={4} min={0} step={1} dots disabled={!this.state.textureStyleControl}/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        wrapperCol={{\r\n                            span: 4,\r\n                            offset: 11,\r\n                        }}\r\n                        style={{ marginTop: '60px' }}\r\n                    >\r\n                        <Button type=\"primary\" htmlType=\"submit\" shape='round'>\r\n                            Begin Generate\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n                <div style={{ minHeight: '100px' }}></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Icon extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <svg t=\"1636188018686\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"2662\" width=\"32\" height=\"32\"><path d=\"M906.666667 170.752a32 32 0 0 1 31.701333 27.648l0.298667 4.352v618.666667a32 32 0 0 1-27.648 31.701333l-4.352 0.298667H117.333333a32 32 0 0 1-31.701333-27.648L85.333333 821.418667v-618.666667a32 32 0 0 1 27.648-31.701333l4.352-0.298667h789.333334zM256 533.376H149.333333v256.042667h725.333334v-256.042667H768v159.957333a32 32 0 0 1-63.701333 4.352l-0.298667-4.352v-159.957333h-85.333333v159.957333a32 32 0 0 1-63.701334 4.352L554.666667 693.333333v-159.957333h-85.333334v159.957333a32 32 0 0 1-63.701333 4.352L405.333333 693.333333v-159.957333h-85.333333v159.957333a32 32 0 0 1-63.701333 4.352L256 693.333333v-159.957333z m618.666667-298.624h-725.333334v234.624h725.333334V234.752z m-480 85.333333a32 32 0 1 1 0 64 32 32 0 0 1 0-64z m341.333333-0.042666a32 32 0 0 1 4.352 63.701333l-4.352 0.298667h-106.666667a32 32 0 0 1-4.352-63.701334l4.352-0.298666h106.666667z m-469.333333-0.042667a32 32 0 1 1 0 64 32 32 0 0 1 0-64z\" p-id=\"2663\"></path></svg>            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './index.css';\r\n\r\nconst mm = require('@magenta/music');\r\nconst soundFontURL = 'https://storage.googleapis.com/magentadata/js/soundfonts/sgm_plus';\r\n\r\nexport default function PianoRoll({ midiURL, id, midiWithoutMelodyURL, additionalVisualizer, setAdditionalVisualizer, noteHeight, pixelsPerTimeStep, color, backgroundColor }) {\r\n\r\n    const [noteSequence, setNoteSequence] = React.useState(null);\r\n    const [noteSequenceWithoutMelody, setNoteSequenceWithoutMelody] = React.useState(null); \r\n    const [player, setPlayer] = React.useState(null);\r\n    const [visualizer, setVisualizer] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        mm.urlToNoteSequence(midiURL).then((ns) => setNoteSequence(ns))\r\n        if (midiWithoutMelodyURL !== undefined){\r\n            mm.urlToNoteSequence(midiWithoutMelodyURL).then((ns) => setNoteSequenceWithoutMelody(ns))\r\n        }\r\n    }, [midiURL, midiWithoutMelodyURL]);\r\n\r\n    React.useEffect(() => {\r\n        if ((midiWithoutMelodyURL === undefined && noteSequence !== null) || \r\n            (midiWithoutMelodyURL !== undefined && noteSequence !== null && noteSequenceWithoutMelody !== null)) {\r\n            var viz = new mm.Visualizer(midiWithoutMelodyURL? noteSequenceWithoutMelody: noteSequence, document.getElementById(id), {\r\n                noteHeight: noteHeight || 6,\r\n                pixelsPerTimeStep: pixelsPerTimeStep || 26,\r\n                noteSpacing: 1,\r\n                noteRGB: color || '0, 59, 118',\r\n                activeNoteRGB: '225, 111, 34',\r\n            });\r\n            var vizPlayer = new mm.SoundFontPlayer(soundFontURL, undefined, undefined, undefined, {\r\n                run: (note) => {\r\n                    viz.redraw(note);\r\n                    if (additionalVisualizer){\r\n                        additionalVisualizer.redraw(note);\r\n                    }\r\n                },\r\n                stop: () => {\r\n                    viz.redraw();\r\n                    if (additionalVisualizer){\r\n                        additionalVisualizer.redraw();\r\n                    }\r\n                },\r\n            });\r\n            setVisualizer(viz);\r\n            if (setAdditionalVisualizer){\r\n                setAdditionalVisualizer(viz);\r\n            }\r\n            setPlayer(vizPlayer);\r\n        }\r\n    }, [noteSequence, noteSequenceWithoutMelody, additionalVisualizer, setAdditionalVisualizer, midiWithoutMelodyURL, id, noteHeight, pixelsPerTimeStep, color]);\r\n\r\n    const handleClick = () => {\r\n        if (player.getPlayState() === 'stopped') {\r\n            player.start(noteSequence);\r\n        }\r\n        else {\r\n            player.stop();\r\n            visualizer.redraw();\r\n            if (additionalVisualizer){\r\n                additionalVisualizer.redraw();\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <canvas id={id} onClick={() => handleClick()} style={{display:'block', backgroundColor:backgroundColor?backgroundColor:true}}/>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport { Typography, Select, Divider, Button } from 'antd'\r\nimport { style, myServer, myDomain, myRoot } from '../../utils';\r\nimport PianoRoll from '../PianoRoll';\r\nimport './index.css'\r\n\r\nconst { Title, Paragraph } = Typography;\r\nconst { Option } = Select;\r\n\r\nfunction ChordText({ index, progression }) {\r\n\r\n    function parseChord(chord){\r\n        var parsed = chord[0];\r\n        if (chord[1] !== ' '){\r\n            parsed = parsed + chord[1];\r\n        }\r\n        if (chord[2] === '1'){\r\n            parsed = parsed + 'm';\r\n        }\r\n        return parsed;\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        var allChords = [];\r\n        for (let i=0; i<progression.length; i++){\r\n            allChords = allChords.concat(progression[i]);\r\n        }\r\n\r\n        const pixelsPerEighthNote = 8.4;\r\n        var allChordsPositions = [];\r\n        var last = '';\r\n        for (let i=0; i<allChords.length; i++){\r\n            if (allChords[i] !== last){\r\n                last = allChords[i];\r\n                allChordsPositions.push([parseChord(allChords[i]), pixelsPerEighthNote*i]);\r\n            }\r\n        }\r\n\r\n        var myChordTextCanvas = document.getElementById('chord-text' + index);\r\n        var ctx = myChordTextCanvas.getContext('2d');\r\n        ctx.font = '20px Times New Roman';\r\n        for (let i=0; i<allChordsPositions.length; i++){\r\n            ctx.fillText(allChordsPositions[i][0], allChordsPositions[i][1], 18);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <canvas id={'chord-text' + index} width={540} height={20} style={{ backgroundColor: '#fff7e6' }}></canvas>\r\n    )\r\n}\r\n\r\nexport default class ChordProgression extends Component {\r\n\r\n    state = {\r\n        style: this.props.style,\r\n        melodyVis: null,\r\n    }\r\n\r\n    setMelodyVis = (melodyVis) => {\r\n        this.setState({ melodyVis: melodyVis })\r\n    }\r\n\r\n    handleStyleChange = (value) => {\r\n        var prevStyles = this.props.father.state.styles;\r\n        prevStyles[this.props.index] = value;\r\n        this.props.father.setState({ styles: prevStyles })\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        return { style: nextProps.style }\r\n    }\r\n\r\n    render() {\r\n        var otherStyles = this.props.data['otherStyles'];\r\n        return (\r\n            <div className='card' style={{ width: `${this.props.data['progression'].length * 75}px` }}>\r\n                <div style={{ textAlign: 'center' }}>\r\n                    <Title level={3} style={{ color: 'gray', marginBottom: '0px' }} >\r\n                        <a id='b' href={true}>PROGRESSION</a>\r\n                    </Title>\r\n                </div>\r\n                <div style={{ width: '50%', float: 'left', marginTop: '20px' }}>\r\n                    <Paragraph style={{ fontSize: '10px', color: 'gray', marginLeft: '12px' }}>Style</Paragraph>\r\n                    <Select value={this.state.style} autoFocus={false} bordered={false} style={{ fontSize: '25px' }} onSelect={this.handleStyleChange}>\r\n                        {style.map((item) => {\r\n                            return <Option value={item.value} disabled={!contains(otherStyles, item.value)}>{item.ui}</Option>\r\n                        })}\r\n                    </Select>\r\n\r\n                </div>\r\n                {/* \r\n                <div style={{ textAlign: 'center', marginTop: '120px', backgroundColor: '#fff7e6', borderRadius: '10px' }}>\r\n                    <div>\r\n                        <Title level={3} style={{ fontSize: '20px' }}>\r\n                            {this.props.data['progression'].map((item, idx) => {\r\n                                return (<span>\r\n                                    <Divider type='vertical' style={{ backgroundColor: 'black', marginRight:'16px', marginLeft: idx === 0 ? '0px' : '16px', display:'space-around' }} />\r\n                                    <span style={{display:'space-around'}}>{displayChord(item[0])}</span>\r\n                                </span>)\r\n                            })}\r\n                        </Title>\r\n                    </div>\r\n                </div> */}\r\n                <div style={{marginTop:'110px'}}></div>\r\n                <PianoRoll midiURL={myRoot + '/midi/' + this.props.data.midi_name.melody} id={this.props.index + 'melody'} pixelsPerTimeStep={35} setAdditionalVisualizer={this.setMelodyVis}></PianoRoll>\r\n                <div style={{ marginTop: '20px' }}></div>\r\n                <div style={{ marginTop: '10px' }}>\r\n                    <ChordText index={this.props.index} progression={this.props.data.progression_full}></ChordText>\r\n                </div>\r\n                <PianoRoll midiURL={myRoot + '/midi/' + this.props.data.midi_name.chord} midiWithoutMelodyURL={myRoot + '/midi/' + this.props.data.midi_name.chord_WM} id={this.props.index + 'chord'} pixelsPerTimeStep={35} noteHeight={3} additionalVisualizer={this.state.melodyVis}></PianoRoll>\r\n                <div style={{ marginTop: '5px' }}></div>\r\n                <PianoRoll midiURL={myRoot + '/midi/' + this.props.data.midi_name.acc} midiWithoutMelodyURL={myRoot + '/midi/' + this.props.data.midi_name.acc_WM} id={this.props.index + 'acc'} pixelsPerTimeStep={35} noteHeight={3} additionalVisualizer={this.state.melodyVis}></PianoRoll>\r\n                <Button type='dashed' style={{ bottom: '20px', position: 'absolute', width: '80%', left: '10%' }} onClick={() => this.props.father.tryChangeAllStyle(this.state.style)}>Change all styles to current style</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nfunction contains(arr, obj) {\r\n    var i = arr.length;\r\n    while (i--) {\r\n        if (arr[i] === obj) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction displayChord(ori) {\r\n    var property = ''\r\n    if (ori.slice(2, 3) === '1') {\r\n        property = 'm'\r\n    }\r\n    if (ori.slice(1, 2) === ' ') {\r\n        return ori.slice(0, 1) + property;\r\n    }\r\n    else {\r\n        return ori.slice(0, 2) + property;\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport './index.css'\r\nimport { LoadingOutlined, CheckCircleOutlined, CaretRightFilled, CaretLeftFilled, PlayCircleOutlined } from '@ant-design/icons';\r\nimport { Empty, Spin, Button, Typography, Divider, Card, Form, Slider, Checkbox } from 'antd';\r\nimport Icon from '../Icon';\r\nimport { myServer, server, myDomain, myRoot } from '../../utils';\r\nimport ChordProgression from '../ChordProgression';\r\n\r\nconst { Title } = Typography;\r\nconst { Meta } = Card;\r\nconst statusText = [\r\n    'Preparing...',\r\n    'Loading melodies, initializing melody meta...',\r\n    'Analyzing melodies, constructing progressions...',\r\n    'Loading library, refining progressions according to styles...',\r\n    'Generating textures...',\r\n    'Synthesizing...',\r\n    'Complete!',\r\n]\r\nfunction toTop() {\r\n    var scrollToptimer = setInterval(function () {\r\n        var top = document.body.scrollTop || document.documentElement.scrollTop;\r\n        var speed = top / 5;\r\n        if (document.body.scrollTop !== 0) {\r\n            document.body.scrollTop -= speed;\r\n        } else {\r\n            document.documentElement.scrollTop -= speed;\r\n        }\r\n        if (top === 0) {\r\n            clearInterval(scrollToptimer);\r\n        }\r\n    }, 30);\r\n}\r\nexport default class Generator extends Component {\r\n\r\n\r\n    state = {\r\n        generatingStage: 0,\r\n        generated: [],\r\n        generatedChordName: null,\r\n        generatedAccName: null,\r\n        playing: 'stop',\r\n        textureStyleControl: this.props.values['enable_texture_style'],\r\n        styles: []\r\n    }\r\n\r\n    count = 0;\r\n\r\n    calcDivWidth = () => {\r\n\r\n        var card = 0;\r\n        this.state.generated.forEach(function (val, _, __) {\r\n            card += val.progression.length * 75;\r\n        }, 0);\r\n        var total = card + 100 + (this.state.generated.length + 3) * 4 + 2\r\n        return total;\r\n    }\r\n\r\n\r\n    playMp3 = (e) => {\r\n\r\n        if (this.state.playing === 'stop') {\r\n            this.mp3 = new Audio(myServer + `/wav/${Math.random()}`);\r\n            this.mp3.play();\r\n            this.mp3.addEventListener('ended', (event) => {\r\n                this.setState({\r\n                    playing: 'stop'\r\n                })\r\n            });\r\n            this.setState({\r\n                playing: 'playing'\r\n            })\r\n        }\r\n        else if (this.state.playing === 'pause') {\r\n            this.mp3.play();\r\n            this.setState({\r\n                playing: 'playing'\r\n            })\r\n        }\r\n        else if (this.state.playing === 'playing') {\r\n            this.setState({\r\n                playing: 'pause'\r\n            })\r\n            this.mp3.pause();\r\n        }\r\n    }\r\n\r\n    askStage = () => {\r\n        server(`/stage_query`, this, null, 'get', null, this.askStageCallback);\r\n        if (this.state.generatingStage === 7) {\r\n            window.clearInterval(this.askStageInterval);\r\n            server(`/generated_query`, this, null, 'get', null, this.generateQueryCallback);\r\n        }\r\n    }\r\n\r\n    askStageCallback = (res) => {\r\n        if (res.status === 'ok') {\r\n            this.setState({ generatingStage: parseInt(res.stage) })\r\n        }\r\n    }\r\n\r\n    generateQueryCallback = (res) => {\r\n        if (res.status === 'ok') {\r\n            this.setState({ generated: res.log, styles: res.log.map(item => item.style), generatedChordName: res.chord_midi_name, generatedAccName: res.acc_midi_name })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.askStageInterval = setInterval(this.askStage, 2000)\r\n    }\r\n    componentWillUnmount() {\r\n        window.clearInterval(this.askStageInterval);\r\n        this.setState({\r\n            playing: 'stop'\r\n        })\r\n        this.mp3 = null\r\n    }\r\n    regenerate = () => {\r\n        var values = this.props.values;\r\n        values['chord_style'] = this.state.styles;\r\n        values['rhythm_density'] = this.refs.form.getFieldValue('rhythm_density');\r\n        values['voice_number'] = this.refs.form.getFieldValue('voice_number');\r\n        values['enable_texture_style'] = this.refs.form.getFieldValue('enable_texture_style');\r\n        server(`/generate`, this, null, 'post', values)\r\n        this.askStageInterval = setInterval(this.askStage, 500);\r\n        this.setState({\r\n            generated: [],\r\n            generatingStage: 0,\r\n            playing: 'stop'\r\n        })\r\n        toTop();\r\n    }\r\n\r\n    tryChangeAllStyle = (newStyle) => {\r\n        var newStyles = [];\r\n        for (let i = 0; i < this.state.generated.length; i++) {\r\n            if (contains(this.state.generated[i].otherStyles, newStyle)) {\r\n                newStyles.push(newStyle);\r\n            }\r\n            else {\r\n                newStyles.push(this.state.styles[i]);\r\n            }\r\n        }\r\n        this.setState({ styles: newStyles });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='upper'>\r\n                    <div style={{ width: '50%', float: 'left', height: '100%' }}>\r\n                        <div className='status'>\r\n                            {statusText.map((item, idx) => {\r\n                                if (idx < this.state.generatingStage || (idx === this.state.generatingStage && this.state.generatingStage === 6)) {\r\n                                    return <p><CheckCircleOutlined style={{ marginRight: '6px' }} />{item}</p>\r\n                                }\r\n                                else if (idx === this.state.generatingStage) {\r\n                                    return <p><LoadingOutlined style={{ marginRight: '6px' }} />{item}</p>\r\n                                }\r\n                                else {\r\n                                    return <p></p>\r\n                                }\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ width: '50%', float: 'right', height: '100%' }}>\r\n                        {this.state.generated.length === 0 ?\r\n                            <div style={{ paddingLeft: '50px', paddingRight: '50px', textAlign: 'center' }}>\r\n                                <Title level={1} style={{ float: 'right', fontSize: '25px', color: '#AAAAAA', userSelect: 'none' }}>Generating, please wait...</Title>\r\n                                <Divider></Divider>\r\n                                <Spin size=\"large\" style={{ marginTop: '50px' }} />\r\n                            </div>\r\n                            :\r\n                            <div style={{ paddingLeft: '50px', paddingRight: '50px' }}>\r\n                                <Title level={1} style={{ float: 'right', fontSize: '25px', color: '#AAAAAA', userSelect: 'none' }}>Progression generated!</Title>\r\n                                <Divider></Divider>\r\n                                <a download='chord.mid' href={`${myRoot}/midi/${this.state.generatedChordName}`}>\r\n                                    <Card hoverable style={{ marginTop: '10px', marginBottom: '10px' }}>\r\n                                        <Meta\r\n                                            avatar={<Icon which='midi' />}\r\n                                            title={<div>Download Chords</div>}\r\n                                            description=\"MIDI consist a melody track and a progression track\"\r\n                                        />\r\n                                    </Card>\r\n                                </a>\r\n                                <a download='accompaniment.mid' href={`${myRoot}/midi/${this.state.generatedAccName}`}>\r\n                                    <Card hoverable style={{ marginTop: '10px', marginBottom: '10px' }}>\r\n                                        <Meta\r\n                                            avatar={<Icon which='midi' />}\r\n                                            title={<div>Download Accompaniment</div>}\r\n                                            description=\"MIDI consist a melody track and a accompaniment track\"\r\n                                        />\r\n                                    </Card>\r\n                                </a>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className='down' style={{ marginBottom: '30px' }}>\r\n                    {this.state.generated.length === 0 ?\r\n                        <div style={{ width: '100%' }}>\r\n                            <Empty style={{ marginTop: '150px' }} description='Progression not generated yet.' />\r\n                        </div>\r\n                        :\r\n                        <div style={{ minWidth: this.calcDivWidth() }}>\r\n                            <div style={{ padding: '2px' }}>\r\n                                <div className='card-start'><CaretRightFilled style={{ lineHeight: '485px', fontSize: '25px' }} /></div>\r\n                                {this.state.generated.map((item, idx) => {\r\n                                    return <ChordProgression data={item} father={this} index={idx} style={this.state.styles[idx]}></ChordProgression>\r\n                                })}\r\n                                <div className='card-end'><CaretLeftFilled style={{ lineHeight: '485px', fontSize: '25px' }} /></div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <Form ref='form'\r\n                    initialValues={{\r\n                        enable_texture_style: this.props.values['enable_texture_style'],\r\n                        rhythm_density: this.props.values['rhythm_density'],\r\n                        voice_number: this.props.values['voice_number']\r\n                    }}>\r\n                    <Form.Item name=\"enable_texture_style\" label={<div>Enable texture style controlling</div>} valuePropName=\"checked\">\r\n                        <Checkbox checked={this.state.textureStyleControl} onChange={(e) => this.setState({ textureStyleControl: e.target.checked })} />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"rhythm_density\" label={<div>Texture Rhythm Density (RD)</div>}\r\n                        rules={[{ required: true, message: 'Please select a RD!' }]}\r\n                    >\r\n                        <Slider max={4} min={0} step={1} dots disabled={!this.state.textureStyleControl} />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"voice_number\" label={<div>Texture Voice Number (VN)</div>}\r\n                        rules={[{ required: true, message: 'Please select a VN!' }]}\r\n                    >\r\n                        <Slider max={4} min={0} step={1} dots disabled={!this.state.textureStyleControl} />\r\n                    </Form.Item>\r\n                </Form>\r\n                <div style={{ marginTop: '50px', marginLeft: '20%', marginRight: '20%', textAlign: 'center' }}>\r\n                    {this.state.generated.length === 0 ?\r\n                        <Button shape=\"round\" type='primary' size='large' style={{ height: '40px' }} disabled ><div style={{ fontSize: '16px' }}>Re-generate subject to the selected styles</div></Button>\r\n                        :\r\n                        <Button shape=\"round\" type='primary' size='large' style={{ height: '40px' }} onClick={this.regenerate} ><div style={{ fontSize: '16px' }}>Re-generate subject to the selected styles</div></Button>\r\n                    }\r\n                </div>\r\n                <div style={{ minHeight: '50px' }}>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nfunction contains(arr, obj) {\r\n    var i = arr.length;\r\n    while (i--) {\r\n        if (arr[i] === obj) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}","import React, { Component } from 'react'\r\nimport ParaSetter from '../ParaSetter'\r\nimport Generator from '../Generator'\r\nimport { Steps } from 'antd';\r\nimport PubSub from 'pubsub-js'\r\nimport { Typography, Divider } from 'antd';\r\nimport './index.css'\r\n\r\nconst { Step } = Steps;\r\nconst { Title } = Typography;\r\n\r\nconst stepText = {\r\n\r\n    0:{ title:'Set Parameters', des:'Upload melodies.'},\r\n    1:{ title:'Generate Accompaniment', des:'Choose the best.'} \r\n\r\n}\r\n\r\nfunction toTop(){\r\n    var scrollToptimer = setInterval(function () {\r\n        var top = document.body.scrollTop || document.documentElement.scrollTop;\r\n        var speed = top / 4;\r\n        if (document.body.scrollTop!==0) {\r\n            document.body.scrollTop -= speed;\r\n        }else {\r\n            document.documentElement.scrollTop -= speed;\r\n        }\r\n        if (top === 0) {\r\n            clearInterval(scrollToptimer);\r\n        }\r\n    }, 30); \r\n}\r\n\r\nexport default class MainInterface extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            step:0,\r\n            values:[]\r\n        }\r\n        PubSub.subscribe('submit', this.onSubmit)\r\n    }\r\n\r\n    onSubmit = (name, msg) => {\r\n        this.setState({\r\n            step:1,\r\n            values:msg\r\n        })\r\n        toTop();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='head'>\r\n                    <a href='/'><Title level={1} style={{float:'left', marginTop:'0px', fontSize:'55px'}} className='title'><span style={{color:'#003b76'}}>A</span>cco<span style={{color:'#003b76'}}>M</span>ontage<span style={{color:'#003b76'}}>2</span></Title></a>\r\n                    <Steps current={this.state.step} style={{maxWidth:'500px', float:'right', marginTop:'10px', marginBottom:'20px'}}>\r\n                        <Step title={stepText['0'].title} description={stepText['0'].des} >\r\n                        </Step>\r\n                        <Step title={stepText['1'].title} description={stepText['1'].des} />\r\n                    </Steps>\r\n                </div>\r\n                <Divider style={{marginBottom:'50px', backgroundColor:'#003b76'}}/ >\r\n                {this.state.step === 0 ? <ParaSetter></ParaSetter> : <Generator values={this.state.values}></Generator>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import './App.css';\r\nimport MainInterface from './components/MainInterface';\r\nimport { Button, Modal, Tabs, Typography } from 'antd';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons'\r\nimport React from 'react';\r\n\r\nconst help1 = (\r\n  <div style={{paddingLeft:'5%', paddingRight:'5%'}}>\r\n    <Typography.Title level={4}>What are required before generation?</Typography.Title>\r\n    <Typography.Title level={5}>Melody</Typography.Title>\r\n    <Typography.Paragraph>AccoMonatage2 needs a leading melody to generate accompaniment. Please drag the melody to the box or click to upload your melody piece. Melody must be a single-track MIDI file (or multi-track with the melody piece at the first track).</Typography.Paragraph>\r\n    <Typography.Title level={5}>Phrases (segmentation)</Typography.Title>\r\n    <Typography.Paragraph>You must also specify the phrases of the uploaded melody. Each phrase has a name and a length. Phrases with the same name are considered as similar phrases when generating textures. Currently, the length of the phrases only supports 4-bar and 8-bar. Please make sure your melody can fit in the phrase structures.</Typography.Paragraph>\r\n    <Typography.Title level={5}>{'Tonic & mode & meter'}</Typography.Title>\r\n    <Typography.Paragraph>You must specify a tonic, mode, and meter for the melody. For example, a melody piece in C Major key and four fourths beat has tonic=C, mode=Major, meter=4/4. Note that currently only 4/4 is supported.</Typography.Paragraph>\r\n    <Typography.Title level={5}>Chord style</Typography.Title>\r\n    <Typography.Paragraph>The chord style control is optional. You can click on <Typography.Text code>Enable Chord Style Controlling</Typography.Text> to activate chord style control. Currently, there are 4 styles in total, AccoMonatage2 will tend to use the selected style to harmonize the melody (but not guaranteed).</Typography.Paragraph>\r\n    <Typography.Title level={5}>Texture style</Typography.Title>\r\n    <Typography.Paragraph>The texture style control is also optional. Five levels of rhythm density and voice number are available.</Typography.Paragraph>\r\n  </div>\r\n)\r\nconst help2 = (\r\n  <div style={{paddingLeft:'5%', paddingRight:'5%'}}>\r\n    <Typography.Title level={4}>When generating...</Typography.Title>\r\n    <Typography.Paragraph>Please wait patiently, due to the limited server resource, the generating process might take 1-2 minutes. You can view the process on the left part.</Typography.Paragraph>\r\n    <Typography.Title level={4}>After generated</Typography.Title>\r\n    <Typography.Title level={5}>Listen and download</Typography.Title>\r\n    <Typography.Paragraph>You may click to download the generated MIDI file (chord or accompaniment). You can aslo listen to the audio of each phrase separately by clicking the piano roll.</Typography.Paragraph>\r\n    <Typography.Title level={5}>Change style and re-generate</Typography.Title>\r\n    <Typography.Paragraph>The choosen chord style of each phrase is displayed. You can click on and choose a new style. Some styles may not be available. You can also change the texture style of the whole melody. Click on the button at the bottom to re-generate based on new styles.</Typography.Paragraph>\r\n  </div>\r\n)\r\n\r\nconst help3 = (\r\n  <div style={{paddingLeft:'5%', paddingRight:'5%'}}>\r\n    <Typography.Title level={5}>Why the generation result is not satisfying?</Typography.Title>\r\n    <Typography.Paragraph>There might be multiple reasons. Please go through the following check list to improve the output result.</Typography.Paragraph>\r\n    <Typography.Paragraph>\r\n      <ul>\r\n        <li><Typography.Text strong>Blank melody at the begining. </Typography.Text>AccoMontage2 marks the first bar of the melody as the begining of the first phrase. If your melody have a piece of blank at the begining and you are not willing to make it part of your phrase, please remove it (including anacrusis).</li>\r\n        <li><Typography.Text strong>Melody is too sparse. </Typography.Text>AccoMontage2 generates only based on the melody. Please make sure the melody have enough notes for reference. Sparce melody might also produce dissatisfying results.</li>\r\n        <li><Typography.Text strong>Melody not monophonic. </Typography.Text>AccoMontage2 prefers monophonic music. That is to say, the melody is expected to have at most one note playing at any moment.</li>\r\n        <li><Typography.Text strong>Tempo too large or too small. </Typography.Text>In most cases, AccoMonatage2 will harmonize a bar with a single chord. If this is not your wish, you can modify the tempo to a suitable range (usually tempo between 70-120 will produce good results).</li>\r\n        <li><Typography.Text strong>Wrong tonic/mode/meter. </Typography.Text>This might cause the algorithm to generate someting that is completely wrong.</li>\r\n      </ul>\r\n    </Typography.Paragraph>\r\n    <Typography.Paragraph>If you are very sure that the above problem is already solved, you can also try other chord styles and texture styles, or even phrase structures (e.g., split an 8-bar phrase into two 4-bar phrases).</Typography.Paragraph>\r\n    <Typography.Title level={5}>Why the generation fails?</Typography.Title>\r\n    <Typography.Paragraph>Please make sure the phrase label is correct. Currently, a limitation is the melody cannot exceed the labeled phrases. Please make sure your last note is within the provided phrases. Other bugs please contact <a href={true}>ly1387@nyu.edu</a>.</Typography.Paragraph>\r\n  </div>\r\n)\r\n\r\nfunction App() {\r\n  const [isModalVisible, setIsModalVisible] = React.useState(false)\r\n\r\n  const closeModal = () => {\r\n    setIsModalVisible(false)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button shape='link' style={{ marginLeft: '92%', marginTop: '20px' }} onClick={() => setIsModalVisible(true)}><QuestionCircleOutlined />Help</Button>\r\n      <div className=\"App\">\r\n        <MainInterface />\r\n      </div>\r\n      <div style={{ minHeight: '50px', textAlign: 'center', backgroundColor: '#003b76' }}>\r\n        <h4 style={{ color: 'white', paddingTop: '10px' }}>Interface for AccoMontage2. Copyright © 2022 NYU Shanghai Music X Lab.</h4>\r\n      </div>\r\n      <Modal title=\"AccoMonatage2 GUI Help\" visible={isModalVisible} width={800} onOk={closeModal} onCancel={closeModal} footer={[<Button type=\"primary\" onClick={closeModal}>Ok</Button>]}>\r\n        <Tabs defaultActiveKey=\"1\" centered>\r\n          <Tabs.TabPane tab=\"Set Parameters Page\" key=\"1\">\r\n            {help1}\r\n          </Tabs.TabPane>\r\n          <Tabs.TabPane tab=\"Generating Page\" key=\"2\">\r\n            {help2}\r\n          </Tabs.TabPane>\r\n          <Tabs.TabPane tab={'Other Q&A'} key=\"3\">\r\n            {help3}\r\n          </Tabs.TabPane>\r\n        </Tabs>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'antd/dist/antd.less';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}